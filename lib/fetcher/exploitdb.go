package fetcher

import (
	"github.com/pkg/errors"
	"github.com/sirupsen/logrus"
	"github.com/urfave/cli"
	"io"
	"net/http"
	"os"
	"path"
	"vuldb/utils/ziputil"
)

const (
	ExploitDBSourceUrl   = "https://github.com/offensive-security/exploitdb/archive/master.zip"
	ExploitDBZipFileName = "exploitdb.zip"
)

func DownloadExploitDatabase(dir string) error {
	logrus.Infof("start to fetching %v", ExploitDBSourceUrl)
	rsp, err := http.Get(ExploitDBSourceUrl)
	if err != nil {
		return err
	}

	fName := path.Join(dir, ExploitDBZipFileName)
	file, err := os.OpenFile(fName, os.O_CREATE|os.O_WRONLY, 0666)
	if err != nil {
		return errors.Errorf("cannot open local file: %v", fName)
	}

	_, err = io.Copy(file, rsp.Body)
	if err != nil {
		return errors.Errorf("copy failed: %s", err)
	}

	logrus.Infof("download finished, start to unzip %v", fName)
	err = ziputil.DeCompress(fName, path.Join(dir, "exploitdb"))
	if err != nil {
		return errors.Errorf("de-compress %v failed: %s", fName, err)
	}

	return nil
}

var DownloadExploitDBFlags = []cli.Flag{
	cli.StringFlag{
		Name:  "dir,exploit-db-dir",
		Value: "./data",
	},
}

func DownloadExploitDBAction(c *cli.Context) error {
	err := DownloadExploitDatabase(c.String("dir"))
	if err != nil {
		return errors.Errorf("download exploit db failed: %s", err)
	}
	return nil
}
